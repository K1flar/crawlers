version: '4'

services:
  service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: search_robot_service
    ports:
      - ${SERVICE_PORT}:8080
    command: ./bin/service/main
    depends_on:
      - db
    networks:
      - search_robot_network

  workers:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: search_robot_workers
    command: bash -c "
      ./bin/cli/main tasks-to-process-producer &&
      ./bin/cli/main tasks-to-process-consumer"
    depends_on:
      - db
    networks:
      - search_robot_network

  db:
    image: postgres:15
    container_name: crawler_tasks_db
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_NAME}
    ports:
      - ${PG_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - search_robot_network
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 2s
      timeout: 1s
      retries: 5

  searx:
    image: searxng/searxng
    container_name: searx
    environment:
      SEARXNG_SECRET: 5a1f4e3b2c8d7e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8g9h0i1j2k3l4
      SEARX_SETTINGS_PATH: /etc/searx/settings.yml
      BASE_URL: http://${SEARX_HOST}:${SEARX_PORT}
      INSTANCE_NAME: my-instance
    ports:
      - ${SEARX_PORT}:8080
    volumes:
      - ./searxng:/etc/searxng
    networks:
      - search_robot_network

  kafka:
    image: apache/kafka
    container_name: kafka
    ports:
      - ${KAFKA_PORT}:9092
    networks:
      - search_robot_network

# Определение тома для хранения данных PostgreSQL
volumes:
  postgres_data:

# Определение сети для связи между контейнерами
networks:
  search_robot_network:
    driver: bridge